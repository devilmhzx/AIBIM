<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>point2f.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Point2f::x' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Point2f::{ctor}</FUNCTION>
    <DECORATED>??0Point2f@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>point2f.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Point2f::y' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Point2f::{ctor}</FUNCTION>
    <DECORATED>??0Point2f@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>72</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::bIntersectOnTwoLines</FUNCTION>
    <DECORATED>?bIntersectOnTwoLines@ComMath@@SA_NVPoint3f@@000PEAV2@@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::getPointToSegDis</FUNCTION>
    <DECORATED>?getPointToSegDis@ComMath@@SAMVPoint3f@@00@Z</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::getMovePointOnLine</FUNCTION>
    <DECORATED>?getMovePointOnLine@ComMath@@SA?AV?$vector@VPoint3f@@V?$allocator@VPoint3f@@@std@@@std@@VPoint3f@@00M@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>452</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::PointInPolygon</FUNCTION>
    <DECORATED>?PointInPolygon@ComMath@@SA_NAEBVPoint3f@@AEBV?$vector@VPoint3f@@V?$allocator@VPoint3f@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>427</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>452</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::PointInPolygon</FUNCTION>
    <DECORATED>?PointInPolygon@ComMath@@SA_NAEBVPoint3f@@AEBV?$vector@VPoint3f@@V?$allocator@VPoint3f@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>427</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>452</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComMath::PointInPolygon</FUNCTION>
    <DECORATED>?PointInPolygon@ComMath@@SA_NAEBVPoint3f@@AEBV?$vector@VPoint3f@@V?$allocator@VPoint3f@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>427</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>729</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::getNormalByLine</FUNCTION>
    <DECORATED>?getNormalByLine@ComMath@@SA?AVPoint3f@@AEAV2@0@Z</DECORATED>
    <FUNCLINE>723</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>commath.cpp</FILENAME>
      <LINE>727</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>ComMath::getNormalByLine</FUNCTION>
    <DECORATED>?getNormalByLine@ComMath@@SA?AVPoint3f@@AEAV2@0@Z</DECORATED>
    <FUNCLINE>723</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>