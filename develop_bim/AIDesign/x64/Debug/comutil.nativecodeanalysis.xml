<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>point2f.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Point2f::y' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Point2f::{ctor}</FUNCTION>
    <DECORATED>??0Point2f@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>point2f.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Point2f::x' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Point2f::{ctor}</FUNCTION>
    <DECORATED>??0Point2f@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ComUtil::StringToPoint3f</FUNCTION>
    <DECORATED>?StringToPoint3f@ComUtil@@SA?AVPoint3f@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>70</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>d:\ai_dev\develop_bim\aidesign</FILEPATH>
      <FILENAME>comutil.cpp</FILENAME>
      <LINE>125</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “CoCreateGuid”。</DESCRIPTION>
    <FUNCTION>ComUtil::getGuuidNo</FUNCTION>
    <DECORATED>?getGuuidNo@ComUtil@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>